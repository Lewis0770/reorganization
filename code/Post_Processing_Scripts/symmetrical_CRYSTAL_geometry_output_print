#!/bin/bash
: '
This script extracts lattice parameters and atomic coordinates from a CRYSTAL output file.
It supports selecting specific geometry steps (e.g., initial, final) and displays either full or minimal atomic coordinates.
'

CRYSTALOutPattern="*.out"

if [[ -f "$1" ]]; then
    MyCRYSTALOut=$1
else
    if [[ -d "$1" ]]; then
	    MyCRYSTALDir=$1
    else
	    MyCRYSTALDir='.'	    
    fi

    if ls $MyCRYSTALDir/$CRYSTALOutPattern &> /dev/null ; then
	    CRYSTALOutCount=`ls $MyCRYSTALDir/$CRYSTALOutPattern | wc -l`
	    if [ $CRYSTALOutCount == 1 ]; then
		MyCRYSTALOut=`find $MyCRYSTALDir/$CRYSTALOutPattern`
	    else
		echo "Could not determine which CRYSTAL output file to use. Please specify one:"
		ls -tr $MyCRYSTALDir/$CRYSTALOutPattern
		exit 2
	    fi
    else
	    echo "Could not find CRYSTAL output file."
	    exit 1
    fi
fi

if [ "$2" != "" ]; then
	if ! [[ "$2" =~ '^[+-]?[0-9]+$' ]] && (( $2 != 0 )); then 
		StructureIndex=$2
		echo "Structure Index is $StructureIndex"
	else       
		echo "Could not understand structure index '$2' as a nonzero integer."
		exit 3
	fi
else
	StructureIndex=-1
fi

if [ $StructureIndex == -1 ]; then
	StructureIndexDescription="the final geometry output"
elif [ $StructureIndex == 1 ]; then
	StructureIndexDescription="the initial geometry output"
else
	StructureIndexDescription="geometry output # $StructureIndex"
fi

echo -e "\nNow looking for $StructureIndexDescription from ${MyCRYSTALOut}. If found, the lattice parameters and irreducible atomic coordinates will print."

PrimitiveCellLineNumbers=$( grep -n "^ PRIMITIVE CELL" $MyCRYSTALOut | cut -f 1 -d : )
StructureCount=$( echo "$PrimitiveCellLineNumbers" | wc -l )

if [ "${StructureIndex#-}" -gt $StructureCount ]; then
	echo -e "\nStructure # $StructureIndex cannot be found.\n"
	exit 4
elif [ $StructureIndex -lt 0 ]; then
	MyPrimitiveCellLineNumber=$( echo "$PrimitiveCellLineNumbers" | tac | sed -n "${StructureIndex#-}p" )
else
	MyPrimitiveCellLineNumber=$( echo "$PrimitiveCellLineNumbers" | sed -n "${StructureIndex}p" )
fi

OptimizedStructure=$( sed -n "$((MyPrimitiveCellLineNumber - 3))p" $MyCRYSTALOut | grep "COORDINATE AND CELL OPTIMIZATION - POINT" -c)
HeadingAndUnitCell=$( sed -n "$((MyPrimitiveCellLineNumber - 4)),$((MyPrimitiveCellLineNumber + 6 ))p" $MyCRYSTALOut)
FinalPrintLine=$( sed -n "$((MyPrimitiveCellLineNumber - 2))p" $MyCRYSTALOut)
NAtomsString=$( sed -n "$((MyPrimitiveCellLineNumber + 4))p" $MyCRYSTALOut | tr -dc '0-9 ' | tr -s ' ')
NAtomsMin=$(echo $NAtomsString | cut -f 1 -d " " )
NAtomsStandard=$(echo $NAtomsString | cut -f 2 -d " " )
AtomicCoordsFullString=$( sed -n "$((MyPrimitiveCellLineNumber+7)),$((MyPrimitiveCellLineNumber + 6 + NAtomsStandard))p" $MyCRYSTALOut )
AtomicCoordsMinString=$(echo "$AtomicCoordsFullString" | awk -F ' ' '$2=="T"' | awk '{printf "%7s %24s %24s %24s\n", $3,$5, $6, $7 }' )

if [ "$OptimizedStructure" == 1 ]; then
	echo -e "\nThis structure was produced during geometry optimization (which may or may not have completed).\n"
	echo "$HeadingAndUnitCell"
else
	echo -e "\nThis structure was not produced during geometry optimization. It may be the initial structure. Therefore its geometry may not be optimized.\n"
	echo "$HeadingAndUnitCell" | tail -n +3
fi


if [ `echo "$AtomicCoordsMinString" | wc -l` != "$NAtomsMin" ]; then
	echo "Error: Script failed to correctly parse the coordinates to display only the minimal symmetric coordinates. Printing full coordinates instead."
	echo "$AtomicCoordsFullString"
else
	echo "$AtomicCoordsMinString"
fi

echo -e "$FinalPrintLine\n"
